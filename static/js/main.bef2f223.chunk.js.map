{"version":3,"sources":["assets/celticknot.svg","firebase/firebase.js","pages/SignIn/signin.component.jsx","components/PanelSwitcher/panelswitcher.component.jsx","components/Notes/notes.component.jsx","redux/notes/notes.actions.js","components/TodoList/todolist.component.jsx","pages/Home/home.component.jsx","App.js","redux/firebase/firebase.actions.js","redux/firebase/firebase.reducer.js","redux/notes/notes.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doSignInWithPopup","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","app","initializeApp","this","provider","GoogleAuthProvider","connect","state","firebase","props","className","bordered","src","Logo","layout","Item","label","size","Password","type","block","icon","style","paddingRight","onClick","token","signInWithPopup","then","result","credential","accessToken","user","message","success","displayName","catch","error","code","errorMessage","Content","Layout","PanelSwitcher","marginTop","ghost","title","subTitle","subtitle","children","notes","theme","value","onChange","dispatch","payload","UPDATE_NOTES","Todo","index","TodoList","useState","todo","setTodo","shape","key","text","checked","map","obj","Sider","Header","Home","page","setPage","mode","selectedKeys","data","disabled","padding","STORE_TOKEN","path","INITIAL_STATE","FirebaseReducer","action","undefined","NotesReducer","rootReducerConfig","storage","whitelist","notesReducerConfig","blacklist","rootReducer","combineReducers","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bef2f223.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/celticknot.4a17f3cb.svg\";","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { useStore } from 'react-redux';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n}\r\n\r\nclass Firebase {\r\n    constructor(){\r\n        app.initializeApp(firebaseConfig);\r\n\r\n        this.auth = app.auth;\r\n        this.provider = new app.auth.GoogleAuthProvider();\r\n    }\r\n\r\n    doSignInWithPopup = () => {\r\n\r\n    }\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) => {\r\n        this.auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    doSignInWithEmailAndPassword = (email, password) => {\r\n        this.auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    doSignOut = () => { this.auth.signOut() }\r\n}\r\n  \r\nexport default Firebase;","import React from 'react';\r\nimport './signin.styles.scss';\r\nimport { Row, Col, Card, Divider, Button, Form, Input, message} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Logo from '../../assets/celticknot.svg';\r\n\r\nfunction SignIn(props){\r\n    return (\r\n        <div className='sign-in'>\r\n            <Card className='container' bordered={false}>\r\n                <div className='logo-container'>\r\n                    <img className='logo'src={Logo}/>\r\n                </div>\r\n                <h1 className='title'>Yggdrasil</h1>\r\n                <Divider />\r\n                <Form className='form' layout='vertical'>\r\n                    <Form.Item label='Email:' className='mb-1'>\r\n                        <Input size='small' />\r\n                    </Form.Item>\r\n                    <Form.Item label='Password:'>\r\n                        <Input.Password size='small'   />\r\n                    </Form.Item>\r\n                    <Form.Item> \r\n                        <Button type=\"primary\" block>Sign in</Button>\r\n                    </Form.Item>\r\n                    <div><a>Forgot password?</a></div>\r\n                    <div><a>Need an account?</a></div>\r\n                    <Divider>or</Divider>\r\n                    <Form.Item>\r\n                        <Button icon={<img style={{paddingRight: '0.5em'}} src='https://www.iconfinder.com/data/icons/social-media-2210/24/Google-16.png'/>} onClick={() => \r\n                            {\r\n                                props.firebase.token.auth().signInWithPopup(props.firebase.token.provider).then(function(result) {\r\n                                    // This gives you a Google Access Token. You can use it to access the Google API.\r\n                                    var token = result.credential.accessToken;\r\n                                    // The signed-in user info.\r\n                                    var user = result.user;\r\n                                    message.success(`Thank you for signing in ${user.displayName}. Redirecting you shortly.`);\r\n                                    \r\n                                    //Save user in Redux\r\n                                \r\n                                    //Save user in Firebase database\r\n\r\n                                    //Redirect to the normal page\r\n                                }).catch(function(error) {\r\n                                    // Handle Errors here.\r\n                                    var errorCode = error.code;\r\n                                    var errorMessage = error.message;\r\n                                    // The email of the user's account used.\r\n                                    var email = error.email;\r\n                                    // The firebase.auth.AuthCredential type that was used.\r\n                                    var credential = error.credential;\r\n                                    // ...\r\n                                    message.error(`${errorMessage}`);\r\n                                });\r\n                            }\r\n                        }>Continue with Google</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    firebase: state.firebase\r\n})\r\n\r\nexport default connect(mapStateToProps)(SignIn);","import React, { useState } from 'react';\r\nimport './panelswitcher.styles.scss';\r\nimport { Layout, PageHeader } from 'antd';\r\nconst {Content} = Layout;\r\n\r\nfunction PanelSwitcher(props){\r\n\r\n\r\n    return (\r\n        <>\r\n            <PageHeader style={{marginTop: '25px'}}ghost={false} title={props.title} subTitle={props.subtitle} />\r\n\r\n            <Content style={{marginTop: '25px'}} className='content'>\r\n                {props.children}\r\n            </Content>\r\n            \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default PanelSwitcher;","import React, {useState} from 'react';\r\nimport'./notes.styles.scss';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { UPDATE_NOTES } from '../../redux/notes/notes.actions.js';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction Notes(props){\r\n\r\n    \r\n    return (\r\n        <div className='notes'>\r\n            <ReactQuill className='quill' theme=\"snow\" value={props.notes} onChange={(notes) => props.dispatch(UPDATE_NOTES(notes))}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    notes: state.notes.notes\r\n})\r\n\r\nexport default connect(mapStateToProps)(Notes);","export const UPDATE_NOTES = (notes) => (\r\n    {\r\n        type: 'UPDATE_NOTES',\r\n        payload: notes\r\n    }\r\n)","import React, { useState } from 'react';\r\nimport './todolist.styles.scss';\r\nimport { Button } from 'antd';\r\n\r\nfunction Todo(props) {\r\n    const {index} = props;\r\n    return (\r\n        <div className={`item ${index % 2 === 0 ? 'white' : 'grey'}`}>\r\n            Heello\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TodoList(props){\r\n    const [todo, setTodo] = useState([])\r\n\r\n    const addTodo = () => {\r\n        setTodo([...todo, {\r\n            key: 'test', \r\n            text: 'test',\r\n            checked: false\r\n        }])\r\n    }\r\n    return (\r\n        <div className='todo'>\r\n            <Button shape=\"circle\" type=\"primary\" onClick={() => addTodo()}>+</Button>\r\n\r\n            <div className='notes-container'>\r\n                {todo.map((obj, index) => (<Todo index={index} />))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport { Layout, Menu, PageHeader } from 'antd';\r\nimport './home.styles.scss';\r\n\r\nimport PanelSwitcher from '../../components/PanelSwitcher/panelswitcher.component.jsx';\r\n\r\nimport Notes from '../../components/Notes/notes.component.jsx';\r\nimport TodoList from '../../components/TodoList/todolist.component.jsx';\r\n\r\nconst { Header, Content, Sider} = Layout;\r\nfunction Home(){\r\n    const [page, setPage] = useState(\"notes\");\r\n\r\n return (\r\n    <Layout className='home'>\r\n        {/* <Header>\r\n            <Menu className='menu' theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n                <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n                <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n                <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n            </Menu>        \r\n      </Header> */}\r\n      <Layout className='main'>\r\n          <Sider className='sidebar'>\r\n                <Menu className='menu' theme=\"light\" mode=\"vertical\" selectedKeys={page} onClick={data => setPage(data.key)}>\r\n                    <Menu.Item key=\"notes\">Notes</Menu.Item>\r\n                    <Menu.Item key=\"todo\" disabled>To-do List</Menu.Item>\r\n                    <Menu.Item key=\"daily\" disabled>Daily tasks</Menu.Item>\r\n                    <Menu.Item key=\"deadlines\" disabled>Deadlines</Menu.Item>\r\n                    <Menu.Item key=\"reminders\" disabled>Reminders</Menu.Item>\r\n                    <Menu.Item key=\"aspirations\" disabled>Aspirations</Menu.Item>\r\n                </Menu>                  \r\n            </Sider>\r\n\r\n          <Layout style={{ padding: '0 24px 24px' }}>\r\n                {\r\n                    page === \"notes\" ? \r\n                        <PanelSwitcher title={'Notes'} subtitle={'Just a plain pad to express all your ideas.'}>\r\n                            <Notes />\r\n                        </PanelSwitcher> : null\r\n                }\r\n                {\r\n                    page === \"todo\" ? \r\n                        <PanelSwitcher title={'To-do List'} subtitle={'Put all your one-off tasks here and cross them off as you finish them.'}>\r\n                            <TodoList />\r\n                        </PanelSwitcher> : null\r\n                }\r\n                {\r\n                    page === \"daily\" ? \r\n                        <PanelSwitcher title={'Daily Tasks'} subtitle={'Any tasks you find yourself repeating daily, eg; taking medicine, flossing or going for a quick jog. Put them here so you don\\'t forget.'}>\r\n                            <Notes />\r\n                        </PanelSwitcher> : null\r\n                }\r\n                {\r\n                    page === \"deadlines\" ? \r\n                        <PanelSwitcher title={'Deadlines'} subtitle={'Any upcoming work deadlines? University assignments? Put them here so you do not forget.'}>\r\n                            <Notes />\r\n                        </PanelSwitcher> : null\r\n                }\r\n                {\r\n                    page === \"reminders\" ? \r\n                        <PanelSwitcher title={'Reminders'} subtitle={'Anything that\\'s not too important to put in deadlines can go here. Need to remember someone\\'s birthday? Want to remind yourself of all the subscriptions you subscribed to? Put them here.'}>\r\n                            <Notes />\r\n                        </PanelSwitcher> : null\r\n                }\r\n                {\r\n                    page === \"aspirations\" ? \r\n                        <PanelSwitcher title={'Aspirations'} subtitle={'Not everything has to be work or education related. Put down some of your favourite hobbies or activities here and track the time you spend doing them. It\\'ll help keep you motivated.'}>\r\n                            <Notes />\r\n                        </PanelSwitcher> : null\r\n                }\r\n          </Layout>\r\n      </Layout>\r\n    </Layout>\r\n )\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport app from 'firebase/app';\n\n\n//Imports\nimport './App.scss';\nimport 'antd/dist/antd.less';\nimport Firebase from './firebase/firebase.js';\nimport 'utilities-css/dist/utilities-css.css';\n\n//Pages\nimport SignIn from './pages/SignIn/signin.component.jsx';\nimport Home from './pages/Home/home.component.jsx';\n\n//Redux\nimport { connect } from 'react-redux';\nimport { STORE_TOKEN } from '../src/redux/firebase/firebase.actions.js';\n\nfunction App(props) {\n  const token = new Firebase();\n  props.dispatch(STORE_TOKEN(token));\n\n  return (\n    <Router>\n      <Switch>\n        {/* <Route path='/signin'>\n          <SignIn />\n        </Route> */}\n        <Route path='/'>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default connect()(App);\n","export const STORE_TOKEN = (token) => (\r\n    {\r\n        type: 'STORE_TOKEN',\r\n        payload: token\r\n    }\r\n)","const INITIAL_STATE = {\r\n    token: null,\r\n    user: null\r\n}\r\n\r\nfunction FirebaseReducer(state=INITIAL_STATE, action){\r\n    switch(action.type){\r\n        case 'STORE_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.payload,\r\n            }\r\n        case 'STORE_USER':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default FirebaseReducer;","const INITIAL_STATE = {\r\n    notes: undefined,\r\n}\r\n\r\nfunction NotesReducer(state=INITIAL_STATE, action){\r\n    switch(action.type){\r\n        case 'UPDATE_NOTES':\r\n            return {\r\n                ...state,\r\n                notes: action.payload,\r\n            }\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default NotesReducer;","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n//Reducers\r\nimport FirebaseReducer from './firebase/firebase.reducer.js';\r\nimport NotesReducer from './notes/notes.reducer.js';\r\n\r\nconst rootReducerConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    whitelist: []\r\n}\r\n\r\nconst notesReducerConfig = {\r\n    key: 'notes',\r\n    storage: storage,\r\n    blacklist: []\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: FirebaseReducer,\r\n    notes: persistReducer(notesReducerConfig, NotesReducer )\r\n})\r\n\r\n\r\nexport default persistReducer(rootReducerConfig, rootReducer);","import { createStore } from \"redux\";\r\nimport rootReducer from './root-reducer.js';\r\nimport { persistStore} from 'redux-persist';\r\n\r\n\r\nexport const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport {store, persistor } from './redux/store.js';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Firebase from './firebase/firebase.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}